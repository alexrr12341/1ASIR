--Añadimos la tabla de diastrabajados

Alter table Empleados
add DiasTrabajados number(5);

--Actualizamos
Create view DiasTrabajados
as
Select to_number(sum(trunc(FechaFin)-trunc(FechaInicio))) as dias,DNIEmpleado
		        from TurnosPorZona
		        group by DNIEmpleado;

Update Empleados e
set e.DiasTrabajados = (Select dias
		        from DiasTrabajados
			where DNIEmpleado=e.DNI);
--Con procedimiento

Create or replace procedure ActualizarEmpleados
is
begin
	Update Empleados e
	set e.DiasTrabajados = (Select dias
			        from DiasTrabajados
				where DNIEmpleado=e.DNI);
end;
/

--Añadimos el paquete
Create or replace package PkgDiasTrabajados
as
	Type tEmpTrabajadores is record

	(
		DNI_Empleado Empleados.DNI%type,
		Dias_Trabajados number
	);
	type tTablaTrabajadores is table of tEmpTrabajadores
	index by binary_integer;
	vTabTrabajadores tTablaTrabajadores;
end;
/

--Creamos el trigger por sentencia
create or replace trigger RellenarDiasTrabajados
before insert or update or delete on TurnosPorZona
declare
	cursor c_diastrab
	is
	select dias,DNIEmpleado
	from DiasTrabajados;
	i number:=0;
begin
	PkgDiasTrabajados.vTabTrabajadores.delete;
	for v_diastrab in c_diastrab loop
		PkgDiasTrabajados.vTabTrabajadores(i).DNI_Empleado:=v_diastrab.DNIEmpleado;
		PkgDiasTrabajados.vTabTrabajadores(i).Dias_Trabajados:=v_diastrab.dias;
		i:=i+1;
	end loop;
end;
/

Create or replace procedure MostrarTablapl
is
begin
	for i in PkgDiasTrabajados.vTabTrabajadores.FIRST..PkgDiasTrabajados.vTabTrabajadores.LAST loop
		dbms_output.put_line(PkgDiasTrabajados.vTabTrabajadores(i).DNI_Empleado||'  '||PkgDiasTrabajados.vTabTrabajadores(i).Dias_Trabajados);
	end loop;
end;
/
--Creamos el trigger por filas de insert

create or replace procedure ObtenerInfoEmpleados (p_dni Empleados.DNI%type,p_dias in out number)
is
	v_encontrado NUMBER:=0;
begin
	for i in PkgDiasTrabajados.vTabTrabajadores.FIRST..PkgDiasTrabajados.vTabTrabajadores.LAST loop
		if PkgDiasTrabajados.vTabTrabajadores(i).DNI_Empleado=p_dni then
			p_dias:=PkgDiasTrabajados.vTabTrabajadores(i).Dias_Trabajados;
			v_encontrado:=1;
		end if;
	end loop;
	if v_encontrado=0 then
		p_dias:=0;
	end if;
end;
/



create or replace procedure InsertarTrabajadorTablaPL(p_dni Empleados.DNI%type,p_dias NUMBER)
is
begin
	PkgDiasTrabajados.vTabTrabajadores(PkgDiasTrabajados.vTabTrabajadores.LAST+1).DNI_Empleado:=p_dni;
	PkgDiasTrabajados.vTabTrabajadores(PkgDiasTrabajados.vTabTrabajadores.LAST).Dias_Trabajados:=p_dias;
end;
/

Create table TurnosporZonaAuxiliar
(
Cod_Vivero Varchar2(10),
Cod_Zona Varchar2(10),
FechaInicio DATE,
DNIEmpleado Varchar2(9),
FechaFin DATE,
CONSTRAINT fk_dniempleado_turnoszonas1 FOREIGN KEY (DNIEmpleado) REFERENCES Empleados(DNI),
CONSTRAINT fk_zonas_turnoszonas1 FOREIGN KEY (Cod_Zona,Cod_Vivero) REFERENCES Zonas(Codigo,Cod_Vivero),
CONSTRAINT pk_clave_turnoszonas1 PRIMARY KEY(Cod_Vivero,Cod_Zona,FechaInicio,DNIEmpleado)
);

insert into TurnosporZonaAuxiliar(Cod_Vivero,Cod_Zona,FechaInicio,DNIEmpleado,FechaFin)
values('11567','57777',to_date('2017-11-12','YYYY-MM-DD'),'32953415B',to_date('2018-10-08','YYYY-MM-DD'));
insert into TurnosporZonaAuxiliar(Cod_Vivero,Cod_Zona,FechaInicio,DNIEmpleado,FechaFin)
values('11567','57777',to_date('2017-01-16','YYYY-MM-DD'),'32953415B',to_date('2017-07-20','YYYY-MM-DD'));

create or replace procedure TratarDiasAñadidos (p_dni Empleados.DNI%type,p_fin TurnosPorZona.FechaFin%Type,p_inicio TurnosPorZona.FechaInicio%type)
is
	v_diastrabajados NUMBER:=0;
	v_diasnuevos number:=0;
	v_diasnuevosañadidos number:=0;
begin
	ObtenerInfoEmpleados(p_dni,v_diastrabajados);
	v_diasnuevos:=p_fin-p_inicio;
	v_diasnuevosañadidos:=v_diastrabajados+v_diasnuevos;
	update Empleados
	set DiasTrabajados=v_diasnuevosañadidos
	where dni = p_dni;
	if v_diastrabajados=0 then
		InsertarTrabajadorTablaPL(p_dni,v_diasnuevosañadidos);
	else
		ActualizarTablaPL(p_dni,v_diasnuevosañadidos);	
	end if;
end;
/

create or replace trigger InsertarFilasEmpleados
before insert on TurnosPorZona
for each row
begin
	TratarDiasAñadidos(:new.DNIEmpleado,:new.FechaFin,:new.FechaInicio);
end;
/

--Creamos el trigger por filas de update

create or replace procedure EliminarEmpleadoTablaPL (p_dni Empleados.DNI%type)
is
begin
	for i in PkgDiasTrabajados.vTabTrabajadores.FIRST..PkgDiasTrabajados.vTabTrabajadores.LAST loop
		if PkgDiasTrabajados.vTabTrabajadores(i).DNI_Empleado=p_dni then
			PkgDiasTrabajados.vTabTrabajadores.DELETE(i);
		end if;
	end loop;
end;
/

create or replace procedure ActualizarTablaPL(p_dni Empleados.DNI%type,p_dias NUMBER)
is
begin
	for i in PkgDiasTrabajados.vTabTrabajadores.FIRST..PkgDiasTrabajados.vTabTrabajadores.LAST loop
		if PkgDiasTrabajados.vTabTrabajadores(i).DNI_Empleado=p_dni then
			PkgDiasTrabajados.vTabTrabajadores(i).Dias_Trabajados:=p_dias;
		end if;
	end loop;
end;
/

create or replace procedure TratarDiasEliminados(p_dni Empleados.DNI%type,p_fin TurnosPorZona.FechaFin%type,p_inicio TurnosPorZona.FechaInicio%type)
is
	v_diastrabajados NUMBER:=0;
	v_diasquitados number:=0;
	v_nuevosdiastrabajados number:=0;
begin
	ObtenerInfoEmpleados(p_dni,v_diastrabajados);
	v_diasquitados:=p_fin-p_inicio;
	v_nuevosdiastrabajados:=v_diastrabajados-v_diasquitados;
	dbms_output.put_line(v_nuevosdiastrabajados);
	update Empleados
	set DiasTrabajados=v_nuevosdiastrabajados
	where DNI = p_dni;
	if v_nuevosdiastrabajados=0 then
		EliminarEmpleadoTablaPL(p_dni);
	else
		ActualizarTablaPL(p_dni,v_nuevosdiastrabajados);	
	end if;
end;
/

create or replace trigger DiasTrabajadosUpdate
before update on TurnosPorZona
for each row
begin
	TratarDiasEliminados(:old.DNIEmpleado,:old.FechaFin,:old.FechaInicio);
	TratarDiasAñadidos(:new.DNIEmpleado,:new.FechaFin,:new.FechaInicio);
end;
/

--Creacion del trigger por sentencia de delete
create or replace trigger DiasTrabajadosDelete
before delete on TurnosPorZona
for each row
begin
	MostrarTablapl;
	TratarDiasEliminados(:old.DNIEmpleado,:old.FechaFin,:old.FechaInicio);
end;
/
